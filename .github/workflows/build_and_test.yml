name: Build and test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - 'wheel/**'
      - 'runci/**'
  release:
    types:
      - created
      - edited
  schedule:
    # 04:00 every Tuesday morning
    - cron: '0 4 * * 2'

jobs:
  publish_to_pypi:
    name: Publish to pypi
    if: github.event_name == 'release'
    needs: cutensornet-checks
    runs-on: ubuntu-latest
    steps:
    - name: Download all wheels
      # downloading all three files into the wheelhouse
      # all files are identical, so there will only be one file
      uses: actions/download-artifact@v4
      with:
        path: wheelhouse
        pattern: artefact-*
        merge-multiple: true
    - name: Put them all in the dist folder
      run: |
        mkdir dist
        for w in `find wheelhouse/ -type f -name "*.whl"` ; do cp $w dist/ ; done
    - name: Publish wheels
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_PYTKET_CUTENSORNET_API_TOKEN }}
        verbose: true

  build_docs:
    name: Build docs
    if: github.event_name == 'release'
    needs: publish_to_pypi
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
        submodules: true
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Download all wheels
      uses: actions/download-artifact@v4
      with:
        path: wheelhouse
    - name: Install pip, wheel
      run: pip install -U pip wheel
    - name: Install poetry
      run: pip install poetry
    - name: Install extension
      run: for w in `find wheelhouse/ -type f -name "*.whl"` ; do poetry install $w ; done
    - name: Install docs dependencies
      run: |
        cd docs
        bash ./install.sh
    - name: Build docs
      timeout-minutes: 20
      run: |
        cd docs
        poetry run bash ./build-docs.sh
